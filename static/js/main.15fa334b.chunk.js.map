{"version":3,"sources":["App.js","index.js"],"names":["App","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","Date","getFullYear","nextYear","intervalFunction","distance","getTime","Math","floor","clearInterval","interval","setTimeout","setInterval","className","ReactDOM","render","document","getElementById"],"mappings":"4KAEe,SAASA,IAAO,IAAD,EACJC,mBAAS,MADL,mBACrBC,EADqB,KACfC,EADe,OAEFF,mBAAS,MAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGEJ,mBAAS,MAHX,mBAGrBK,EAHqB,KAGZC,EAHY,OAIEN,mBAAS,MAJX,mBAIrBO,EAJqB,KAIZC,EAJY,OAKTR,oBAAS,IAAIS,MAAOC,cAAgB,GAAhDC,EALqB,oBAOtBC,EAAmB,WACvB,IAEIC,EAFgB,IAAIJ,KAAJ,iBAAmBE,EAAnB,cAAwCG,WAClD,IAAIL,MAAOK,UAGrBZ,EAAQa,KAAKC,MAAMH,EAAQ,QAC3BT,EAASW,KAAKC,MAAOH,EAAQ,MAAT,OACpBP,EAAWS,KAAKC,MAAOH,EAAQ,KAAT,MACtBL,EAAWO,KAAKC,MAAOH,EAAQ,IAAkB,MAE7CA,EAAW,GACbI,cAAcC,IAGlBC,YAAW,WACTP,MACC,GACH,IAAMM,EAAWE,aAAY,WAC3BR,MACC,KAEH,OACE,sBAAKS,UAAU,MAAf,UACE,iDACA,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,4BAAIpB,IACJ,6CAGJ,qBAAKoB,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,4BAAIlB,IACJ,8CAGJ,qBAAKkB,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,4BAAIhB,IACJ,gDAGJ,qBAAKgB,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,4BAAId,IACJ,mDAIN,kDAAqB,IAAIE,MAAOC,cAAgB,EAAhD,OACA,kI,MCvDNY,IAASC,OACP,cAACxB,EAAD,IACAyB,SAASC,eAAe,W","file":"static/js/main.15fa334b.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\nexport default function App() {\n  const [days, setDays] = useState(null)\n  const [hours, setHours] = useState(null)\n  const [minutes, setMinutes] = useState(null)\n  const [seconds, setSeconds] = useState(null)\n  const [nextYear] = useState(new Date().getFullYear() + 1)\n\n  const intervalFunction = () => {\n    var countDownDate = new Date(`Jan 1, ${nextYear} 00:00:00`).getTime()\n    var now = new Date().getTime()\n    var distance = countDownDate - now\n      \n    setDays(Math.floor(distance / (1000 * 60 * 60 * 24)))\n    setHours(Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n    setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)))\n    setSeconds(Math.floor((distance % (1000 * 60)) / 1000))\n\n    if (distance < 0) {\n      clearInterval(interval)\n    }\n  }\n  setTimeout(() => {\n    intervalFunction()\n  }, 1)\n  const interval = setInterval(() => {\n    intervalFunction()\n  }, 1000) \n\n  return (\n    <div className=\"App\">\n      <h1>Countdown Timer</h1>\n      <div className=\"timer\">\n        <div className=\"container\">\n          <div className=\"elements\">\n            <p>{days}</p>\n            <span>days</span>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"elements\">\n            <p>{hours}</p>\n            <span>hours</span>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"elements\">\n            <p>{minutes}</p>\n            <span>minutes</span>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"elements\">\n            <p>{seconds}</p>\n            <span>seconds</span>\n          </div>\n        </div>\n      </div>\n      <p>Happy New Year, { new Date().getFullYear() + 1 }!</p>\n      <small>This countdown accurately measures the days from now until the end of the year you are in!</small>\n    </div>\n  )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./App.scss\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}